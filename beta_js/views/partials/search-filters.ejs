<!-- htmlhint spec-char-escape:false -->

<!--
This partial prints out the search filters for the listings page.

It also contains the javascript used to animate these filters.
We use the Isotope javascript library to perform the animations.
-->

<div class="filter-bar">

  <div class="filters">

      <div class="filter room-type">
        <span class="filter-name">Room type</span>
        <div class="room-element"><label for="box">Cardboard box</label><input type="checkbox" id="box" checked></div> 
        <div class="room-element"><label for="bed">Bed</label><input type="checkbox" id="bed" checked></div>
        <div class="room-element"><label for="other">Other</label><input type="checkbox" id="other" checked></div>
      </div>

      <div class="filter price-range">
        <span class="filter-name">Price range</span>
        $<input type="number" min="0" id="min-price">
        to
        $<input type="number" min="0" id="max-price">
      </div>

  </div>

</div>

<script>
    // Advanced material
  
    // Initialize Isotope on the div with class="listings", using all <li> elements as tiles
    $('.listings').isotope({
      itemSelector: 'li',
      layoutMode: 'fitRows',
      fitRows: {
          gutter: 10
      }
    })
  
    // Listen to changes on the checkbox and then filter the listings
    $('.room-type :checkbox').on( 'change', filterListings );

    // Validate the inputs making sure min is less than max
    $('.price-range input').on(   'input' , validatePrices );
    $('.price-range input').on(   'input' , filterListings );
  
    // This is where we setup the room type and price range filtering
    function filterListings() {
      $( '.listings' ).isotope( {
        filter: function() {
          var listings = <%- JSON.stringify( listings ) %>;

          var price    = listings[ this.id ].price;
          var category = listings[ this.id ].category;

          return price >= minPrice()
              && price <= maxPrice()
              && isChecked( category );
        }
      })
    }

    function validatePrices() {
      if ( minPrice() > maxPrice() ) {
          if ( this.id == 'min-price' )
              setMaxPrice( minPrice() )
          else
              setMinPrice( maxPrice() )
      }
    }

    function isChecked( category ) {
      return document.getElementById( category ).checked;
    }

    function minPrice() {
      return parseFloat( $('#min-price').val() ) || 0;
    }

    function maxPrice() {
      var max = parseFloat( $('#max-price').val() )
      return isNaN( max ) ? Infinity : max;
    }

    function setMinPrice( val ) {
      return $('#min-price').val( val )
    }

    function setMaxPrice( val ) {
      return $('#max-price').val( val )
    }

</script>